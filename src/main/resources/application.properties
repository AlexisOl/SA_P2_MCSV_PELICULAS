spring.application.name=movies.microservice

spring.datasource.url=jdbc:mariadb://40.233.27.238:3307/movies_db
spring.datasource.username=app_user
spring.datasource.password=appSa456.
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#aws.s3.enabled=false          # en dev/local
aws.s3.bucket=sa-p2-img
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION}

spring.flyway.enabled=true
# Si Flyway usa la misma DB que el datasource, puedes omitir estas 3 y reutiliza el datasource:
spring.flyway.url=jdbc:mariadb://40.233.27.238:3307/movies_db
spring.flyway.user=app_user
spring.flyway.password=appSa456.
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# --- Multipart (Spring) ---
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# --- Tomcat (evitar cortes en uploads grandes) ---
# -1 = sin l√≠mite
server.tomcat.max-swallow-size=-1
server.tomcat.max-http-form-post-size=-1

#Posible confif de kakfa
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
spring.profiles.active=dev

springdoc.swagger-ui.path=/swagger
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
